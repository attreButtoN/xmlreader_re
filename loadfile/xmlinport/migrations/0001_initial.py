# Generated by Django 3.2.6 on 2021-10-06 09:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nil', models.BooleanField(blank=True, null=True, verbose_name='nil')),
            ],
        ),
        migrations.CreateModel(
            name='AnullmentMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
                ('id_annulment', models.IntegerField(blank=True, null=True, verbose_name='ID_Annulment')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Reason')),
                ('is_hide', models.BooleanField(blank=True, null=True, verbose_name='IsHide')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_begin', models.DateTimeField(blank=True, null=True, verbose_name='TimeBegin')),
                ('time_end', models.DateTimeField(blank=True, null=True, verbose_name='TimeEnd')),
                ('cause_of_refuse', models.TextField(blank=True, null=True, verbose_name='CauseOfRefuse')),
                ('rules', models.TextField(blank=True, null=True, verbose_name='Rules')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.TextField(blank=True, null=True, verbose_name='Result')),
                ('cause_of_refuse', models.TextField(blank=True, null=True, verbose_name='CauseOfRefuse')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applications_data', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.applicationdata', verbose_name='ApplicationData')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationSessionEnd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationSessionStart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationSessionStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
                ('date_begin', models.DateTimeField(blank=True, null=True, verbose_name='DateBegin')),
            ],
        ),
        migrations.CreateModel(
            name='ArbitrManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inn', models.TextField(blank=True, max_length=12, null=True, verbose_name='INN')),
                ('first_name', models.CharField(max_length=50, null=True, verbose_name='FirstName')),
                ('last_name', models.CharField(max_length=50, null=True, verbose_name='LastName')),
                ('middle_name', models.CharField(blank=True, max_length=50, verbose_name='MiddleName')),
                ('reg_num', models.CharField(blank=True, max_length=30, null=True, verbose_name='RegNum')),
                ('ogrn', models.CharField(blank=True, max_length=15, null=True, verbose_name='OGRNIP')),
                ('snils', models.CharField(blank=True, max_length=11, null=True, verbose_name='SNILS')),
                ('correspodence_address', models.CharField(blank=True, max_length=300, null=True, verbose_name='CorrespodenceAddress')),
            ],
        ),
        migrations.CreateModel(
            name='Attach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.TextField(blank=True, null=True, verbose_name='FileName')),
                ('type', models.TextField(blank=True, null=True, verbose_name='Type')),
                ('blob', models.TextField(blank=True, null=True, verbose_name='Blob')),
            ],
        ),
        migrations.CreateModel(
            name='BankruptcyCreditor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BankruptcyCreditorCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.TextField(blank=True, null=True, verbose_name='FullName')),
                ('short_name', models.TextField(blank=True, null=True, verbose_name='ShortName')),
            ],
        ),
        migrations.CreateModel(
            name='BankruptcyCreditorList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bankruptcy_creditor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.bankruptcycreditor', verbose_name='BankruptcyCreditor')),
            ],
        ),
        migrations.CreateModel(
            name='BankruptcyCreditorPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.TextField(blank=True, null=True, verbose_name='FirstName')),
                ('middle_name', models.TextField(blank=True, null=True, verbose_name='MiddleName')),
                ('last_name', models.TextField(blank=True, null=True, verbose_name='LastName')),
            ],
        ),
        migrations.CreateModel(
            name='BiddingCancel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Reason')),
            ],
        ),
        migrations.CreateModel(
            name='BiddingEnd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
            ],
        ),
        migrations.CreateModel(
            name='BiddingEndBankruptcyCreditor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
                ('bankruptcy_creditor_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='xmlinport.bankruptcycreditorlist', verbose_name='BankruptcyCreditorList')),
            ],
        ),
        migrations.CreateModel(
            name='BiddingFail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Reason')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
                ('attach', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.attach', verbose_name='Attach')),
            ],
        ),
        migrations.CreateModel(
            name='BiddingInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
                ('idefrsb', models.TextField(blank=True, null=True, verbose_name='IDEFRSB')),
                ('arbitr_manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.arbitrmanager', verbose_name='ArbitrManager')),
            ],
        ),
        migrations.CreateModel(
            name='BiddingPause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Reason')),
            ],
        ),
        migrations.CreateModel(
            name='BiddingProcessInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
            ],
        ),
        migrations.CreateModel(
            name='BiddingResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
                ('attach', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.attach', verbose_name='Attach')),
            ],
        ),
        migrations.CreateModel(
            name='BiddingResume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Reason')),
            ],
        ),
        migrations.CreateModel(
            name='BiddingStart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
            ],
        ),
        migrations.CreateModel(
            name='BiddingStateLotInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_number', models.IntegerField(blank=True, null=True, verbose_name='LotNumber')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Reason')),
            ],
        ),
        migrations.CreateModel(
            name='Body',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BuyerCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.TextField(blank=True, null=True, verbose_name='FullName')),
                ('short_name', models.TextField(blank=True, null=True, verbose_name='ShortName')),
                ('inn', models.TextField(blank=True, null=True, verbose_name='INN')),
                ('ogrn', models.IntegerField(blank=True, null=True, verbose_name='ORGN')),
                ('legal_address', models.TextField(blank=True, null=True, verbose_name='LegalAddress')),
                ('post_address', models.TextField(blank=True, null=True, verbose_name='PostAddress')),
                ('phone', models.IntegerField(blank=True, null=True, verbose_name='Phone')),
                ('email', models.TextField(blank=True, null=True, verbose_name='Email')),
            ],
        ),
        migrations.CreateModel(
            name='BuyerPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.TextField(blank=True, null=True, verbose_name='FullName')),
                ('last_name', models.TextField(blank=True, null=True, verbose_name='LastName')),
                ('middle_name', models.TextField(blank=True, null=True, verbose_name='MiddleName')),
                ('inn', models.TextField(blank=True, null=True, verbose_name='INN')),
                ('ogrnip', models.TextField(blank=True, null=True, verbose_name='OGRNIP')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('phone', models.TextField(blank=True, null=True, verbose_name='Phone')),
                ('email', models.TextField(blank=True, null=True, verbose_name='Email')),
            ],
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idclass', models.TextField(null=True, verbose_name='IDClass')),
            ],
        ),
        migrations.CreateModel(
            name='CloseForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_result', models.DateTimeField(blank=True, null=True, verbose_name='TimeResult')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyBankrCommis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.TextField(blank=True, null=True, verbose_name='FullName')),
                ('short_name', models.TextField(blank=True, null=True, verbose_name='ShortName')),
                ('inn', models.TextField(blank=True, null=True, verbose_name='INN')),
                ('ogrn', models.TextField(blank=True, null=True, verbose_name='ORGN')),
            ],
        ),
        migrations.CreateModel(
            name='ContractInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_number', models.TextField(blank=True, null=True, verbose_name='ContractNumber')),
                ('nil', models.BooleanField(blank=True, null=True, verbose_name='nil')),
                ('date_contract', models.DateTimeField(blank=True, null=True, verbose_name='DateContract')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='Price')),
            ],
        ),
        migrations.CreateModel(
            name='ContractParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Name')),
                ('ogrn', models.TextField(blank=True, null=True, verbose_name='ORGN')),
                ('inn', models.TextField(blank=True, null=True, verbose_name='INN')),
                ('is_winner', models.BooleanField(blank=True, null=True, verbose_name='IsWinner')),
                ('is_buyer', models.BooleanField(blank=True, null=True, verbose_name='IsBuyer')),
            ],
        ),
        migrations.CreateModel(
            name='ContractParticipantList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_participant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.contractparticipant', verbose_name='ContractParticipant')),
            ],
        ),
        migrations.CreateModel(
            name='ContractSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_id', models.TextField(blank=True, null=True, verbose_name='TradeId')),
                ('event_time', models.DateTimeField(blank=True, null=True, verbose_name='EventTime')),
            ],
        ),
        migrations.CreateModel(
            name='CreditorLotNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_number', models.IntegerField(blank=True, null=True, verbose_name='LotNumber')),
            ],
        ),
        migrations.CreateModel(
            name='DatePublishSmi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nil', models.BooleanField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DebtorCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.TextField(blank=True, null=True, verbose_name='FullName')),
                ('short_name', models.TextField(blank=True, null=True, verbose_name='ShortName')),
                ('inn', models.TextField(blank=True, null=True, verbose_name='INN')),
                ('ogrn', models.TextField(blank=True, null=True, verbose_name='ORGN')),
            ],
        ),
        migrations.CreateModel(
            name='DeptorPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inn', models.TextField(blank=True, null=True, verbose_name='INN')),
                ('snils', models.TextField(blank=True, null=True, verbose_name='SNILS')),
                ('first_name', models.TextField(blank=True, null=True, verbose_name='FirstName')),
                ('last_name', models.TextField(blank=True, null=True, verbose_name='LastName')),
                ('middle_name', models.TextField(blank=True, null=True, verbose_name='MiddleName')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docfile', models.FileField(upload_to='documents/%Y/%m/%d')),
                ('xmlfile', models.FileField(upload_to='documents/%Y/m/%d')),
            ],
        ),
        migrations.CreateModel(
            name='Envelope',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.body', verbose_name='Body')),
            ],
        ),
        migrations.CreateModel(
            name='FailureTradeResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('substantiation', models.TextField(blank=True, null=True, verbose_name='Substantiation')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='Price')),
                ('buyer_company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.buyercompany', verbose_name='BuyerCompany')),
                ('buyer_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.buyerperson', verbose_name='BuyerPerson')),
            ],
        ),
        migrations.CreateModel(
            name='Information',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nil', models.BooleanField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LegalCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_number', models.TextField(blank=True, null=True, verbose_name='CaseNumber')),
                ('court_name', models.TextField(blank=True, null=True, verbose_name='CourtName')),
                ('base', models.TextField(blank=True, null=True, verbose_name='Base')),
            ],
        ),
        migrations.CreateModel(
            name='Lot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_number', models.IntegerField(blank=True, null=True, verbose_name='LotNumber')),
                ('start_price', models.FloatField(blank=True, null=True, verbose_name='StartPrice')),
                ('step_price_percent', models.FloatField(blank=True, null=True, verbose_name='StepPricePercent')),
                ('price_reduction', models.TextField(blank=True, null=True, verbose_name='PriceReduction')),
                ('participants', models.TextField(blank=True, null=True, verbose_name='Participants')),
                ('advance', models.FloatField(blank=True, null=True, verbose_name='Advance')),
                ('trade_object_html', models.TextField(blank=True, null=True, verbose_name='TradeObjectHtml')),
                ('advance_percent', models.FloatField(blank=True, null=True, verbose_name='AdvancePercent')),
                ('concours', models.TextField(blank=True, null=True, verbose_name='Concours')),
                ('payment_info', models.TextField(blank=True, null=True, verbose_name='PaymentInfo')),
                ('sale_agreement', models.TextField(blank=True, null=True, verbose_name='SaleAgreement')),
                ('classification', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.classification', verbose_name='Classification')),
            ],
        ),
        migrations.CreateModel(
            name='LotContractSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_number', models.IntegerField(blank=True, null=True, verbose_name='LotNumber')),
                ('additional_info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.additionalinfo', verbose_name='AdditionalInfo')),
                ('contract_info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.contractinfo', verbose_name='LotNumber')),
                ('contract_participant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.contractparticipantlist', verbose_name='ContractParticipantList')),
            ],
        ),
        migrations.CreateModel(
            name='LotInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_number', models.IntegerField(blank=True, null=True, verbose_name='LotNumber')),
            ],
        ),
        migrations.CreateModel(
            name='LotList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nil', models.BooleanField(blank=True, null=True)),
                ('bidding_state_lot_info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.biddingstatelotinfo', verbose_name='LotStatistic')),
                ('lot', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lot', verbose_name='Lot')),
                ('lot_info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotinfo', verbose_name='LotInfo')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('envelope', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.envelope', verbose_name='Envelope')),
            ],
        ),
        migrations.CreateModel(
            name='OpenForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_begin', models.DateTimeField(blank=True, null=True, verbose_name='TimeBegin')),
                ('time_end', models.DateTimeField(blank=True, null=True, verbose_name='TimeEnd')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legal_address', models.TextField(blank=True, null=True, verbose_name='LegalAddress')),
                ('post_address', models.TextField(blank=True, null=True, verbose_name='PostAddress')),
                ('phone', models.TextField(blank=True, null=True, verbose_name='Phone')),
                ('email', models.TextField(blank=True, null=True, verbose_name='Email')),
                ('full_name', models.TextField(blank=True, null=True, verbose_name='Phone')),
                ('short_name', models.TextField(blank=True, null=True, verbose_name='ShortName')),
                ('inn', models.TextField(blank=True, null=True, verbose_name='INN')),
                ('ogrn', models.IntegerField(null=True, verbose_name='ORGN')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.TextField(blank=True, null=True, verbose_name='FirstName')),
                ('last_name', models.TextField(blank=True, null=True, verbose_name='LastName')),
                ('middle_name', models.TextField(blank=True, null=True, verbose_name='MiddleName')),
                ('inn', models.TextField(blank=True, null=True, verbose_name='INN')),
                ('ogrnip', models.IntegerField(blank=True, null=True, verbose_name='OGRNIP')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('phone', models.TextField(blank=True, null=True, verbose_name='Phone')),
                ('email', models.TextField(blank=True, null=True, verbose_name='Email')),
            ],
        ),
        migrations.CreateModel(
            name='PriceInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_number', models.IntegerField(blank=True, null=True, verbose_name='LotNumber')),
                ('new_price', models.FloatField(blank=True, null=True, verbose_name='NewPrice')),
            ],
        ),
        migrations.CreateModel(
            name='Sro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sro_name', models.CharField(max_length=512, verbose_name='SroName')),
                ('sro_registry_number', models.CharField(max_length=30, verbose_name='SroRegistryNumber')),
                ('ogrn', models.CharField(blank=True, max_length=13, verbose_name='OGRN')),
                ('inn', models.CharField(blank=True, max_length=10, verbose_name='INN')),
                ('legal_address', models.CharField(blank=True, max_length=1024, verbose_name='LegalAddress')),
            ],
        ),
        migrations.CreateModel(
            name='StepPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nil', models.BooleanField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_efrsb', models.IntegerField(blank=True, null=True, verbose_name='ID_EFRSB')),
                ('id_external', models.TextField(blank=True, null=True, verbose_name='ID_External')),
                ('message', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.message', verbose_name='Message')),
            ],
        ),
        migrations.CreateModel(
            name='TradeList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.trade', verbose_name='Trade')),
            ],
        ),
        migrations.CreateModel(
            name='TradeOrganizerCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.TextField(blank=True, null=True, verbose_name='FullName')),
                ('short_name', models.TextField(blank=True, null=True, verbose_name='ShortName')),
                ('inn', models.TextField(blank=True, null=True, verbose_name='INN')),
                ('ogrn', models.TextField(blank=True, null=True, verbose_name='ORGN')),
                ('is_asv', models.BooleanField(blank=True, null=True, verbose_name='IsAsv')),
            ],
        ),
        migrations.CreateModel(
            name='TradeOrganizerPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.TextField(blank=True, null=True, verbose_name='FistName')),
                ('last_name', models.TextField(blank=True, null=True, verbose_name='LastName')),
                ('middle_name', models.TextField(blank=True, null=True, verbose_name='MiddleName')),
                ('inn', models.TextField(blank=True, null=True, verbose_name='INN')),
                ('snils', models.TextField(blank=True, null=True, verbose_name='SNILS')),
            ],
        ),
        migrations.CreateModel(
            name='TradePlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inn', models.TextField(blank=True, null=True, verbose_name='INN')),
                ('trade_list', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.tradelist', verbose_name='TradeList')),
            ],
        ),
        migrations.CreateModel(
            name='WinnerCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legal_address', models.TextField(blank=True, null=True, verbose_name='LegalAddress')),
                ('post_address', models.TextField(blank=True, null=True, verbose_name='PostAdress')),
                ('phone', models.TextField(blank=True, null=True, verbose_name='Phone')),
                ('email', models.TextField(blank=True, null=True, verbose_name='Email')),
                ('full_name', models.TextField(blank=True, null=True, verbose_name='FullName')),
                ('short_name', models.TextField(blank=True, null=True, verbose_name='ShortName')),
                ('inn', models.TextField(blank=True, null=True, verbose_name='INN')),
                ('ogrn', models.TextField(blank=True, null=True, verbose_name='OGRN')),
            ],
        ),
        migrations.CreateModel(
            name='WinnerPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.TextField(blank=True, null=True, verbose_name='FirstName')),
                ('last_name', models.TextField(blank=True, null=True, verbose_name='LastName')),
                ('middle_name', models.TextField(blank=True, null=True, verbose_name='MiddleName')),
                ('inn', models.TextField(blank=True, null=True, verbose_name='INN')),
                ('ogrnip', models.TextField(blank=True, null=True, verbose_name='OGRNIP')),
                ('snils', models.TextField(blank=True, null=True, verbose_name='SNILS')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('phone', models.TextField(blank=True, null=True, verbose_name='Phone')),
                ('email', models.TextField(blank=True, null=True, verbose_name='Email')),
            ],
        ),
        migrations.CreateModel(
            name='TradePlaceList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_place', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.tradeplace', verbose_name='TradeList')),
            ],
        ),
        migrations.CreateModel(
            name='TradeOrganizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_organizer_company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.tradeorganizercompany', verbose_name='TradeOrganizerCompany')),
                ('trade_organizer_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.tradeorganizerperson', verbose_name='TradeOgranizerPerson')),
            ],
        ),
        migrations.CreateModel(
            name='TradeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auction_type', models.TextField(blank=True, null=True, verbose_name='AuctionType')),
                ('form_price', models.TextField(blank=True, null=True, verbose_name='FormPrice')),
                ('isrepeat', models.BooleanField(blank=True, null=True, verbose_name='ISRepeat')),
                ('date_publish_efir', models.DateTimeField(blank=True, null=True, verbose_name='DatePublishEFIR')),
                ('application', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.application', verbose_name='Application')),
                ('attach', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.attach', verbose_name='Attach')),
                ('close_form', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.closeform', verbose_name='CloseForm')),
                ('date_publish_smi', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.datepublishsmi', verbose_name='DatePublishSMI')),
                ('lot_list', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotlist', verbose_name='LotList')),
                ('open_form', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.openform', verbose_name='OpenForm')),
            ],
        ),
        migrations.CreateModel(
            name='SuccessTradeResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='Price')),
                ('substantiation', models.TextField(blank=True, null=True, verbose_name='Substantiation')),
                ('winner_company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.winnercompany', verbose_name='WinnerCompany')),
                ('winner_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.winnerperson', verbose_name='WinnerPerson')),
            ],
        ),
        migrations.CreateModel(
            name='SetContractSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_sale', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.contractsale', verbose_name='ContractSale')),
            ],
        ),
        migrations.CreateModel(
            name='SetBiddingStart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bidding_start', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.biddingstart', verbose_name='BiddingStart')),
            ],
        ),
        migrations.CreateModel(
            name='SetBiddingResume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bidding_resume', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.biddingresume', verbose_name='BiddingResume')),
            ],
        ),
        migrations.CreateModel(
            name='SetBiddingResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bidding_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.biddingresult', verbose_name='BiddingResult')),
            ],
        ),
        migrations.CreateModel(
            name='SetBiddingProcessInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bidding_process_info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.biddingprocessinfo', verbose_name='BiddingProcessInfo')),
            ],
        ),
        migrations.CreateModel(
            name='SetBiddingPause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bidding_pause', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.biddingpause', verbose_name='BiddingPause')),
            ],
        ),
        migrations.CreateModel(
            name='SetBiddingInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bidding_invitations', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.biddinginvitation', verbose_name='BiddingInvitation')),
            ],
        ),
        migrations.CreateModel(
            name='SetBiddingFail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bidding_fail', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.biddingfail', verbose_name='BiddingFail')),
            ],
        ),
        migrations.CreateModel(
            name='SetBiddingEndBankruptcyCreditor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bidding_end_bankruptcy_creditor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.biddingendbankruptcycreditor', verbose_name='BiddingEndBankruptcyCreditor')),
            ],
        ),
        migrations.CreateModel(
            name='SetBiddingEnd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bidding_end', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.biddingend', verbose_name='BiddingEnd')),
            ],
        ),
        migrations.CreateModel(
            name='SetBiddingCancel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bidding_cancel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.biddingcancel', verbose_name='BiddingCancel')),
            ],
        ),
        migrations.CreateModel(
            name='SetApplicationSessionStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_session_statistic', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.applicationsessionstatistic', verbose_name='ApplicationSessionStatistic')),
            ],
        ),
        migrations.CreateModel(
            name='SetApplicationSessionStart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_session_start', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.applicationsessionstart', verbose_name='ApplicationSessionStart')),
            ],
        ),
        migrations.CreateModel(
            name='SetApplicationSessionEnd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_session_end', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.applicationsessionend', verbose_name='ApplicationSessionEnd')),
            ],
        ),
        migrations.CreateModel(
            name='SetAnnulment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annulment_message', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.anullmentmessage', verbose_name='AnnulmentMessage')),
            ],
        ),
        migrations.CreateModel(
            name='Participants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.participant', verbose_name='Participant')),
            ],
        ),
        migrations.AddField(
            model_name='participant',
            name='participant_company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.participantcompany', verbose_name='ParticipantCompany'),
        ),
        migrations.AddField(
            model_name='participant',
            name='participant_person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.participantperson', verbose_name='ParticipantPerson'),
        ),
        migrations.CreateModel(
            name='LotTradeResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_number', models.IntegerField(blank=True, null=True, verbose_name='LotNumber')),
                ('failure_trade_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.failuretraderesult', verbose_name='FailureTradeResult')),
                ('participants', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.participants', verbose_name='Participants')),
                ('success_trade_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.successtraderesult', verbose_name='SuccesTradeResult')),
            ],
        ),
        migrations.CreateModel(
            name='LotStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_number', models.IntegerField(blank=True, null=True, verbose_name='LotNumber')),
                ('entry_count', models.IntegerField(blank=True, null=True, verbose_name='EntryCount')),
                ('accept_count', models.IntegerField(blank=True, null=True, verbose_name='AcceptCount')),
                ('application_list', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.applicationlist', verbose_name='ApplicationList')),
            ],
        ),
        migrations.AddField(
            model_name='lotlist',
            name='lot_statistic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotstatistic', verbose_name='LotStatistic'),
        ),
        migrations.AddField(
            model_name='lotlist',
            name='lot_trade_result',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lottraderesult', verbose_name='LotTradeResult'),
        ),
        migrations.CreateModel(
            name='LotContractSaleList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_contract_sale', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotcontractsale', verbose_name='LotContractSale')),
            ],
        ),
        migrations.AddField(
            model_name='lot',
            name='step_price',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.stepprice', verbose_name='StepPrice'),
        ),
        migrations.CreateModel(
            name='Debtor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debtor_company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.debtorcompany', verbose_name='DebtorCompany')),
                ('debtor_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.deptorperson', verbose_name='DebtorPerson')),
            ],
        ),
        migrations.CreateModel(
            name='CreditorLotNumberList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creditor_lot_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.creditorlotnumber', verbose_name='CreditorLotNumber')),
            ],
        ),
        migrations.AddField(
            model_name='contractsale',
            name='lot_contract_sale_list',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotcontractsalelist', verbose_name='LotContractSaleList'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_annulment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setannulment', verbose_name='SetAnnulment'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_application_session_end',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setapplicationsessionend', verbose_name='SetApplicationSessionEnd'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_application_session_start',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setapplicationsessionstart', verbose_name='SetApplicationSessionStart'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_application_session_statistic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setapplicationsessionstatistic', verbose_name='SetApplicationSessionStatistic'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_bidding_cancel',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setbiddingcancel', verbose_name='SetBiddingCancel'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_bidding_end',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setbiddingend', verbose_name='SetBiddingEnd'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_bidding_end_bankruptcy_creditor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setbiddingendbankruptcycreditor', verbose_name='set_bidding_end_bankruptcy_creditor'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_bidding_fail',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setbiddingfail', verbose_name='SetBiddingFail'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_bidding_invitation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setbiddinginvitation', verbose_name='SetBiddingInvitation'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_bidding_pause',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setbiddingpause', verbose_name='SetBiddingPause'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_bidding_process_info',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setbiddingprocessinfo', verbose_name='SetBiddingProcessInfo'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_bidding_result',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setbiddingresult', verbose_name='SetBuddingResult'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_bidding_resume',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setbiddingresume', verbose_name='SetBiddingResume'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_bidding_start',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setbiddingstart', verbose_name='SetBiddingStart'),
        ),
        migrations.AddField(
            model_name='body',
            name='set_contract_sale',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.setcontractsale', verbose_name='SetContractSale'),
        ),
        migrations.AddField(
            model_name='biddingstart',
            name='lot_list',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotlist', verbose_name='LotList'),
        ),
        migrations.AddField(
            model_name='biddingresume',
            name='lot_list',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotlist', verbose_name='LotList'),
        ),
        migrations.AddField(
            model_name='biddingresult',
            name='lot_list',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotlist', verbose_name='LotList'),
        ),
        migrations.AddField(
            model_name='biddingprocessinfo',
            name='price_info',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.priceinfo', verbose_name='PriceInfo'),
        ),
        migrations.AddField(
            model_name='biddingpause',
            name='lot_list',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotlist', verbose_name='LotList'),
        ),
        migrations.AddField(
            model_name='biddinginvitation',
            name='company_bankr_commis',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.companybankrcommis', verbose_name='CompanyBankrCommis'),
        ),
        migrations.AddField(
            model_name='biddinginvitation',
            name='debtor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.debtor', verbose_name='Debtor'),
        ),
        migrations.AddField(
            model_name='biddinginvitation',
            name='legal_case',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.legalcase', verbose_name='LegalCase'),
        ),
        migrations.AddField(
            model_name='biddinginvitation',
            name='trade_info',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.tradeinfo', verbose_name='TradeInfo'),
        ),
        migrations.AddField(
            model_name='biddinginvitation',
            name='trade_ogranizer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.tradeorganizer', verbose_name='TradeOrganizer'),
        ),
        migrations.AddField(
            model_name='biddingfail',
            name='lot_list',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotlist', verbose_name='LotList'),
        ),
        migrations.AddField(
            model_name='biddingendbankruptcycreditor',
            name='information',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.information', verbose_name='Information'),
        ),
        migrations.AddField(
            model_name='biddingend',
            name='lot_list',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotlist', verbose_name='LotList'),
        ),
        migrations.AddField(
            model_name='biddingcancel',
            name='lot_list',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotlist', verbose_name='LotList'),
        ),
        migrations.AddField(
            model_name='bankruptcycreditor',
            name='bankruptcy_creditor_company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.bankruptcycreditorcompany', verbose_name='BankruptcyCreditorCompany'),
        ),
        migrations.AddField(
            model_name='bankruptcycreditor',
            name='bankruptcy_creditor_person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.bankruptcycreditorperson', verbose_name='BankruptcyCreditorCompany'),
        ),
        migrations.AddField(
            model_name='bankruptcycreditor',
            name='creditor_lot_number_list',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.creditorlotnumberlist', verbose_name='CreditorLotNumberList'),
        ),
        migrations.AddField(
            model_name='arbitrmanager',
            name='sro',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.sro'),
        ),
        migrations.AddField(
            model_name='applicationsessionstatistic',
            name='attach',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.attach', verbose_name='Attach'),
        ),
        migrations.AddField(
            model_name='applicationsessionstatistic',
            name='lot_list',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotlist', verbose_name='LotList'),
        ),
        migrations.AddField(
            model_name='applicationsessionstart',
            name='lot_list',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotlist', verbose_name='LotList'),
        ),
        migrations.AddField(
            model_name='applicationsessionend',
            name='lot_list',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='xmlinport.lotlist', verbose_name='LotList'),
        ),
    ]
